{"version":3,"sources":["logo.svg","components/create-assignment.component.js","components/edit-assignment.component.js","components/assignment-list.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CreateAssignment","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeAssignmentDescription","bind","assertThisInitialized","onChangeAssignmentResponsible","onChangeAssignmentPriority","onSubmit","state","Assignment_description","Assignment_responsible","Assignment_priority","Assignment_completed","e","setState","target","value","preventDefault","console","log","concat","newAssignments","assignment_description","assignment_responsible","assignment_priority","assignment_completed","axios","post","then","res","data","history","push","react_default","a","createElement","style","marginTop","className","type","onChange","name","id","checked","Component","EditAssignment","onChangeAssignmentCompleted","_this2","get","match","params","response","catch","error","obj","align","htmlFor","Assignment","assignment","Link","to","_id","AssignmentsList","assignments","_this3","map","currentAssignment","i","assignment_list_component_Assignment","key","assignmentList","App","BrowserRouter","basename","process","src","logo","width","height","alt","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71863eb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass CreateAssignment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeAssignmentDescription = this.onChangeAssignmentDescription.bind(this)\r\n        this.onChangeAssignmentResponsible = this.onChangeAssignmentResponsible.bind(this)\r\n        this.onChangeAssignmentPriority = this.onChangeAssignmentPriority.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n\r\n        this.state = {\r\n            Assignment_description: '',\r\n            Assignment_responsible: '',\r\n            Assignment_priority: '',\r\n            Assignment_completed: false\r\n        }\r\n    }\r\n\r\n    onChangeAssignmentDescription(e) {\r\n        this.setState({\r\n            Assignment_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeAssignmentResponsible(e) {\r\n        this.setState({\r\n            Assignment_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeAssignmentPriority(e) {\r\n        this.setState({\r\n            Assignment_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Assignment Description: ${this.state.Assignment_description}`);\r\n        console.log(`Assignment Responsible: ${this.state.Assignment_responsible}`);\r\n        console.log(`Assignment Priority: ${this.state.Assignment_priority}`);\r\n        \r\n        const newAssignments = {\r\n            assignment_description: this.state.Assignment_description,\r\n            assignment_responsible: this.state.Assignment_responsible,\r\n            assignment_priority: this.state.Assignment_priority,\r\n            assignment_completed: this.state.Assignment_completed\r\n        };\r\n\t\t\r\n\t\taxios.post('http://localhost:4000/assignments/add', newAssignments)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            Assignment_description: '',\r\n            Assignment_responsible: '',\r\n            Assignment_priority: '',\r\n            Assignment_completed: false\r\n        })\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Create New Assignment</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.Assignment_description}\r\n                                onChange={this.onChangeAssignmentDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.Assignment_responsible}\r\n                                onChange={this.onChangeAssignmentResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityLow\" \r\n                                    value=\"Low\"\r\n                                    checked={this.state.Assignment_priority==='Low'} \r\n                                    onChange={this.onChangeAssignmentPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityMedium\" \r\n                                    value=\"Medium\" \r\n                                    checked={this.state.Assignment_priority==='Medium'} \r\n                                    onChange={this.onChangeAssignmentPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityHigh\" \r\n                                    value=\"High\" \r\n                                    checked={this.state.Assignment_priority==='High'} \r\n                                    onChange={this.onChangeAssignmentPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Assignment\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateAssignment","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nclass EditAssignment extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\tconsole.log('props in EditAssignment:', props)\r\n\t\t\r\n        this.onChangeAssignmentDescription = this.onChangeAssignmentDescription.bind(this);\r\n        this.onChangeAssignmentResponsible = this.onChangeAssignmentResponsible.bind(this);\r\n        this.onChangeAssignmentPriority = this.onChangeAssignmentPriority.bind(this);\r\n        this.onChangeAssignmentCompleted = this.onChangeAssignmentCompleted.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            assignment_description: '',\r\n            assignment_responsible: '',\r\n            assignment_priority: '',\r\n            assignment_completed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/assignments/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    assignment_description: response.data.assignment_description,\r\n                    assignment_responsible: response.data.assignment_responsible,\r\n                    assignment_priority: response.data.assignment_priority,\r\n                    assignment_completed: response.data.assignment_completed\r\n                })   \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeAssignmentDescription(e) {\r\n        this.setState({\r\n            assignment_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeAssignmentResponsible(e) {\r\n        this.setState({\r\n            assignment_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeAssignmentPriority(e) {\r\n        this.setState({\r\n            assignment_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeAssignmentCompleted(e) {\r\n        this.setState({\r\n            assignment_completed: !this.state.assignment_completed\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            assignment_description: this.state.assignment_description,\r\n            assignment_responsible: this.state.assignment_responsible,\r\n            assignment_priority: this.state.assignment_priority,\r\n            assignment_completed: this.state.assignment_completed\r\n        };\r\n        console.log(obj);\r\n        axios.post('http://localhost:4000/assignments/update/'+this.props.match.params.id, obj)\r\n            .then(res => console.log(res.data));\r\n        \r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 align=\"center\">Update Assignment</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.assignment_description}\r\n                                onChange={this.onChangeAssignmentDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.assignment_responsible}\r\n                                onChange={this.onChangeAssignmentResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityLow\" \r\n                                    value=\"Low\"\r\n                                    checked={this.state.assignment_priority==='Low'} \r\n                                    onChange={this.onChangeAssignmentPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityMedium\" \r\n                                    value=\"Medium\" \r\n                                    checked={this.state.assignment_priority==='Medium'} \r\n                                    onChange={this.onChangeAssignmentPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityHigh\" \r\n                                    value=\"High\" \r\n                                    checked={this.state.assignment_priority==='High'} \r\n                                    onChange={this.onChangeAssignmentPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <input  className=\"form-check-input\"\r\n                                id=\"completedCheckbox\"\r\n                                type=\"checkbox\"\r\n                                name=\"completedCheckbox\"\r\n                                onChange={this.onChangeAssignmentCompleted}\r\n                                checked={this.state.assignment_completed}\r\n                                value={this.state.assignment_completed}\r\n                                />\r\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\r\n                            Completed\r\n                        </label>                        \r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Assignment\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditAssignment","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst Assignment = props => (\r\n    <tr>\r\n        <td className={props.assignment.assignment_completed ? 'completed' : ''}>{props.assignment.assignment_description}</td>\r\n        <td className={props.assignment.assignment_completed ? 'completed' : ''}>{props.assignment.assignment_responsible}</td>\r\n        <td className={props.assignment.assignment_completed ? 'completed' : ''}>{props.assignment.assignment_priority}</td>\r\n        <td>\r\n            <Link to={\"/edit/\"+props.assignment._id}>Edit</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nclass AssignmentsList extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {assignments: []};\r\n    }\r\n     componentDidMount() {\r\n        axios.get('http://localhost:4000/assignments/')\r\n            .then(response => {\r\n                this.setState({ assignments: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })\r\n    }\r\n    componentDidUpdate() {\r\n        axios.get('http://localhost:4000/assignments/')\r\n        .then(response => {\r\n            this.setState({assignments: response.data});\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })   \r\n    }\r\n\r\n    assignmentList() {\r\n        return this.state.assignments.map(function(currentAssignment, i){\r\n            return <Assignment assignment={currentAssignment} key={i} />;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Assignment List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Responsible</th>\r\n                            <th>Priority</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.assignmentList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignmentsList","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport logo from \"./logo.svg\";\n\nimport CreateAssignment from './components/create-assignment.component'\nimport EditAssignment from './components/edit-assignment.component'\nimport AssignmentsList from './components/assignment-list.component'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">            \n              <img src={logo} width=\"50\" height=\"50\" alt=\"react\" />            \n            <Link to=\"/\" className=\"navbar-brand\">Assignments List App</Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">Assignments</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\">Create Assignments</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <br/>\n          <Route path=\"/\" exact component={AssignmentsList} />\n          <Route path=\"/edit/:id\" component={EditAssignment} />\n          <Route path=\"/create\" component={CreateAssignment} />\n        </div>\n      </Router>     \n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}